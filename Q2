import numpy as np
import matplotlib.pyplot as plt
import mpl_toolkits.mplot3d.axes3d as axes3d
from scipy.integrate import quad
x=np.linspace(0,1.1)
plt.plot(x, np.sqrt(x), "b", x, x**3,"r")
plt.show()
def integrate(x):
    return np.pi*(x-(x**6))
ans, err = quad(integrate, 0, 1)
print("Volume of the solid of revolution obtained by rotating this region about x-axist: ", ans) #1.121997376282069
fig = plt.figure()
ax = fig.add_subplot(1, 1, 1, projection='3d')
u = np.linspace(0, 1, 60)
v = np.linspace(0, 2*np.pi, 60)
U, V = np.meshgrid(u, v)
X = U
Y1 = (np.sqrt(U))*np.cos(V)
Z1 = (np.sqrt(U))*np.sin(V)
Y2 = (U**3)*np.cos(V)
Z2 = (U**3)*np.sin(V)
ax.plot_surface(X, Y1, Z1, alpha=0.5, color='blue', rstride=6, cstride=12)
ax.plot_surface(X, Y2, Z2, alpha=0.5, color='red', rstride=6, cstride=12)
plt.show()
